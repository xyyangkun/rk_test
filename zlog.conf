[global]
strict init = true
reload conf period = 10M

buffer min = 1024
buffer max = 2MB

#rotate lock file = /tmp/zlog.lock
rotate lock file = self
default format = "%d(%F %T.%l) %-6V (%c:%F:%L) - %m%n"

file perms = 600
fsync period = 1K

[levels]
TRACE = 10
CRIT = 130, LOG_CRIT

[formats]
simple = "%m%n"
normal = "%d(%F %T.%l) %m%n"

[rules]
default.*		>stdout; simple

#逗号后第一个参数表示文件达到多大后开始进行转档。
#第二个参数表示保留多少个存档文件（0代表不删除任何存档文件）
#第三个参数表示转档的文件名，其中#r表示存档文件的序号，r是rolling的缩写。还可以放#s，是sequence的缩写。转档文件名必须包含#r或者#s。
#CommProtocol.*  "/app/conf/log/out64.log", 512k * 4  ~ "out64.log.#r"; normal
#zlog.*  "/userdata/osee_live/osee_live.log", 512k * 4  ~ "/userdata/osee_live/osee_live.log.#r";
rktest.*  "/tmp/rktest.log", 512k * 4  ~ "/tmp/rktest.log.#r";

#*.*			-"%12.2E/app/conf/log/%c.log", \
#			1MB * 1 ~ "%E/app/conf/log/%c.%D(%F) #2r #3s.log"; \
#			simple

#my_.INFO		>stderr;
#my_cat.!ERROR		"aa.log"
#my_dog.=DEBUG		>syslog, LOG_LOCAL0; simple
#my_dog.=DEBUG		| /usr/bin/cronolog /www/logs/example_%Y%m%d.log ; normal
#my_mice.*		$record_func , "record_path%c"; normal

